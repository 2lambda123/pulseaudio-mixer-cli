# -*- comment-start: ";" -*- (modify-syntax-entry ?\; "<")

;; This config is only read from ~/.pulseaudio-mixer-cli.cfg
;; Format: https://docs.python.org/2/library/configparser.html#ConfigParser.RawConfigParser
;; Everything that starts with "#" or ";" is a comment here


[default]
adjust-step: 2   ; percent, 0-100

;; "*-level" values are used in initial script and pa-mixer-mk2, *not* in pa-mixer-mk3
; max-level: 40000
; min-level: 3000

;; Only used in pa-mixer-mk3, 1.0 means "normal" (non-soft-boosted) level
max-volume: 1.0
min-volume: 0.05

;; "use-media-name" displays "media.name" property instead of process parameters,
;;  which can be good if player supports pulse output natively and sets it (e.g. mpv), confusing otherwise.
use-media-name: true

;; "use-device-name" shows e.g. "alsa_output.pci-0000_04_00.1.hdmi-stereo",
;;  from Device object "Name" property. Not very nice, but can be more precise.
; use-device-name: true

; focus-default: first   ; either "first" or "last"
; focus-new-items: true   ; to move focus to new items as they appear
; focus-new-items-delay: 5.0   ; min seconds since last focus change to trigger this

; name-len-max: 100   ; cut names to that even if they fit into window width
; name-cut-from: left   ; "left" or "right"
; name-show-level: true   ; show 0-100 volume level on the left ("--" for 0-, "++" for 100+)

; overkill-redraw: false   ; re-creates ncurses window on terminal resize
; verbose: false   ; does not close stderr

;; Disabling "reconnect" will cause script to exit when disconnected from pulseaudio server.
;; Otherwise it runs endlessly, establishing new connection when old one goes down.
; reconnect: true


;; stream-* sections are matched to PA stream/sink parameters upon first seeing them,
;;  with "match[key]" parameters being regexp matches for "key"
;;  and "equals[key]" - exact string value checks.
;; All the other supported parameters are applied to every matched stream.
;; Match logic is "every specified check should match".
;; All checks happen in the same order as written here, several sections can be applied to the same stream.
;; To dump all parameters for every current stream, use: ./pa-mixer-mk3.py --dump-stream-parameters 2>stream_params.txt

[stream-vlc]
equals[application.process.binary]: vlc   ; exact string match
volume-max: 0.2   ; 0-1 range
; volume-min:
; volume-set:

[stream-players]
match[application.process.binary]: ^(vlc|mpv)$   ; regexp match
volume-max: 0.3

[stream-sink-hdmi]
match[alsa.id]: ^HDMI\b
hidden: true   ; wont be displayed in the list

[stream-sink-analog-volume]
equals[alsa.id]: ID 440 Analog
volume-set: 0.6

[stream-sink-analog-force-port]
equals[alsa.id]: ID 440 Analog
;; "port" option sets output port upon seeing the card for the first time (i.e. upon start).
;; It is only valid for sinks, not for individual audio streams.
;; Use e.g. "pacmd list-sinks" to see the list of "ports:" and "active port:" there.
port: analog-output-headphones
;; "reapply" option forces re-applying all the checks of this secrion on each change event.
;; As opposed to only applying these settings when sink/stream was first seen.
;; Can be used to fix port against plug/unplug changes, or lock volume.
reapply: true

[stream-firefox]
equals[application.name]: CubebUtils
;; "name" sets the display name for matched streams.
;; If non-unique, auto-generated tag will be appended at the end.
name: Mozilla Firefox
;; volume-max + reapply will ensure that app can never set its volume higher than that
;; Can be particulary useful where third-parties (e.g. websites, youtube) can control volume
volume-max: 0.5
reapply: true
